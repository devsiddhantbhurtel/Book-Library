@model IEnumerable<Order>

@{
    ViewData["Title"] = "My Orders";
}

<div class="container py-5">
    <div class="d-flex align-items-center justify-content-between mb-4">
        <div>
            <h2 class="mb-1">
                <i class="bi bi-bag-check me-2"></i>My Orders
            </h2>
            <p class="text-muted mb-0">Track and manage your book orders</p>
        </div>
        <a href="/" class="btn btn-primary">
            <i class="bi bi-book me-2"></i>Browse Books
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <i class="bi bi-bag-x display-1 text-muted mb-4"></i>
            <h3 class="mb-3">No Orders Yet</h3>
            <p class="text-muted mb-4">You haven't placed any orders yet. Start exploring our collection!</p>
            <a href="/" class="btn btn-primary btn-lg">
                <i class="bi bi-book-half me-2"></i>Browse Books
            </a>
        </div>
    }
    else
    {
        foreach (var order in Model)
        {
            <div class="card mb-4 shadow-sm border-0 rounded-3 overflow-hidden">
                <div class="card-header bg-light py-3 d-flex justify-content-between align-items-center">
                    <div>
                        <div class="d-flex align-items-center">
                            <i class="bi bi-box-seam me-2"></i>
                            <h5 class="mb-0">Order #@order.OrderID</h5>
                        </div>
                        <div class="text-muted mt-1">
                            <i class="bi bi-calendar3 me-1"></i>
                            @order.OrderDate.ToString("MMMM dd, yyyy")
                        </div>
                    </div>
                    <div class="text-end">
                        <span class="badge rounded-pill fs-6 @(order.Status == "Cancelled" ? "bg-danger" : order.Status == "Fulfilled" ? "bg-success" : "bg-primary")">
                            <i class="bi @(order.Status == "Cancelled" ? "bi-x-circle" : order.Status == "Fulfilled" ? "bi-check-circle" : "bi-hourglass-split") me-1"></i>
                            @order.Status
                        </span>
                    </div>
                </div>

                <div class="card-body p-4">
                    @foreach (var item in order.OrderItems ?? Enumerable.Empty<OrderItem>())
                    {
                        <div class="row g-4 mb-3 align-items-center">
                            <div class="col-md-2">
                                <div class="rounded-3 overflow-hidden shadow-sm">
                                    <img src="@(item.Book?.ImageUrl ?? "/images/book-placeholder.png")"
                                         class="img-fluid w-100"
                                         alt="@item.Book?.Title"
                                         style="height: 160px; object-fit: cover;">
                                </div>
                            </div>
                            <div class="col-md-7">
                                <h5 class="mb-2">@item.Book?.Title</h5>
                                <div class="text-muted">
                                    <div class="mb-2">
                                        <span class="badge bg-light text-dark border">
                                            <i class="bi bi-key me-1"></i>Claim Code: 
                                            <span class="font-monospace">@order.ClaimCode</span>
                                        </span>
                                    </div>
                                    <div class="d-flex gap-3">
                                        <div>
                                            <i class="bi bi-123 me-1"></i>Quantity: @item.Quantity
                                        </div>
                                        <div>
                                            <i class="bi bi-tag me-1"></i>Unit Price: ₹@(item.UnitPrice.ToString("N2"))
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 text-end">
                                <div class="h5 mb-3">₹@((item.Quantity * item.UnitPrice).ToString("N2"))</div>
                                @if (order.Status == "Pending")
                                {
                                    <button class="btn btn-outline-danger btn-sm cancel-item" 
                                            data-order-id="@order.OrderID"
                                            data-item-id="@item.OrderItemID"
                                            onclick="cancelOrderItem(@order.OrderID, @item.OrderItemID)">
                                        <i class="bi bi-x-circle me-1"></i>Cancel Item
                                    </button>
                                }
                            </div>
                        </div>
                        @if (!item.Equals(order.OrderItems.Last()))
                        {
                            <hr class="my-4">
                        }
                    }

                    <div class="border-top pt-4 mt-4">
                        <div class="row align-items-end">
                            <div class="col-md-6">
                                @if (order.HasFivePlusDiscount || order.HasLoyaltyDiscount)
                                {
                                    <div>
                                        <small class="text-muted d-block mb-2">
                                            <i class="bi bi-tag-fill me-1"></i>Applied Discounts
                                        </small>
                                        <div class="d-flex gap-2">
                                            @if (order.HasFivePlusDiscount)
                                            {
                                                <span class="badge bg-success">
                                                    <i class="bi bi-percent me-1"></i>5+ Books Discount
                                                </span>
                                            }
                                            @if (order.HasLoyaltyDiscount)
                                            {
                                                <span class="badge bg-success">
                                                    <i class="bi bi-star-fill me-1"></i>Loyalty Discount
                                                </span>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="col-md-6 text-end">
                                <small class="text-muted d-block mb-1">
                                    <i class="bi bi-receipt me-1"></i>Order Total
                                </small>
                                <div class="h3 mb-3">₹@(order.TotalAmount.ToString("N2"))</div>
                                @if (order.Status == "Pending")
                                {
                                    <button class="btn btn-outline-danger cancel-order" 
                                            data-order-id="@order.OrderID"
                                            onclick="cancelOrder(@order.OrderID)">
                                        <i class="bi bi-x-circle me-2"></i>Cancel Entire Order
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@section Scripts {
<script>
    async function cancelOrder(orderId) {
        if (!confirm('Are you sure you want to cancel the entire order?')) {
            return;
        }

        try {
            const response = await fetch(`/api/order/${orderId}/cancel`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                window.location.reload();
            } else {
                alert('Failed to cancel the order. Please try again.');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred while cancelling the order.');
        }
    }

    async function cancelOrderItem(orderId, orderItemId) {
        if (!confirm('Are you sure you want to cancel this item?')) {
            return;
        }

        try {
            const response = await fetch(`/api/order/${orderId}/items/${orderItemId}/cancel`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                window.location.reload();
            } else {
                alert('Failed to cancel the item. Please try again.');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred while cancelling the item.');
        }
    }
</script>
} 