@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS

@using System.Net.Http.Json
@using Microsoft.JSInterop

@code {
    private string ErrorMessage { get; set; } = string.Empty;
    private LoginModel loginModel = new LoginModel();

    private class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }

    private class LoginResult
    {
        public string token { get; set; }
    }

    private class User
    {
        public string Role { get; set; }
    }

    private async Task HandleLogin()
    {
        ErrorMessage = string.Empty;
        try
        {
            var response = await Http.PostAsJsonAsync("/api/user/login", loginModel);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResult>();
                if (result != null && !string.IsNullOrEmpty(result.token))
                {
                    // Store JWT token in localStorage
                    await JS.InvokeVoidAsync("localStorage.setItem", "authToken", result.token);
                    // Fetch user profile and redirect based on role
                    var user = await Http.GetFromJsonAsync<User>("/api/user/profile");
                    if (user?.Role == "Admin")
                        Navigation.NavigateTo("/admin");
                    else
                        Navigation.NavigateTo("/");
                }
                else
                {
                    ErrorMessage = "Login failed: No token returned.";
                }
            }
            else
            {
                ErrorMessage = "Invalid credentials.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }
}